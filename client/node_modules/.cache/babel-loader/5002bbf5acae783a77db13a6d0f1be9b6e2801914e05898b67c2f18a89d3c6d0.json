{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from \"./types\";\nimport { v4 as uuid } from 'uuid';\nexport const setAlert = function (msg, alertType) {\n  let timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5000;\n  return dispatch => {\n    const id = uuid(); //to get a random id\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        alertType,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n};","map":{"version":3,"names":["SET_ALERT","REMOVE_ALERT","v4","uuid","setAlert","msg","alertType","timeout","arguments","length","undefined","dispatch","id","type","payload","setTimeout"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/actions/alert.js"],"sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nexport const setAlert = (msg, alertType,timeout = 5000) => dispatch => {\r\n    const id = uuid(); //to get a random id\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: {msg, alertType, id}\r\n    });\r\n\r\n    setTimeout(() => dispatch({type: REMOVE_ALERT, payload: id}), timeout);\r\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,YAAY,QAAQ,SAAS;AACjD,SAAQC,EAAE,IAAIC,IAAI,QAAO,MAAM;AAE/B,OAAO,MAAMC,QAAQ,GAAG,SAAAA,CAACC,GAAG,EAAEC,SAAS;EAAA,IAACC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,OAAKG,QAAQ,IAAI;IACnE,MAAMC,EAAE,GAAGT,IAAI,EAAE,CAAC,CAAC;IACnBQ,QAAQ,CAAC;MACLE,IAAI,EAAEb,SAAS;MACfc,OAAO,EAAE;QAACT,GAAG;QAAEC,SAAS;QAAEM;MAAE;IAChC,CAAC,CAAC;IAEFG,UAAU,CAAC,MAAMJ,QAAQ,CAAC;MAACE,IAAI,EAAEZ,YAAY;MAAEa,OAAO,EAAEF;IAAE,CAAC,CAAC,EAAEL,OAAO,CAAC;EAC1E,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}