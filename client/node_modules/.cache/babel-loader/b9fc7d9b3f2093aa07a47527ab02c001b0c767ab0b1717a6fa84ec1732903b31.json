{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rubni\\\\OneDrive\\\\Ambiente de Trabalho\\\\FullStack\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGithub = _ref => {\n  _s();\n  let {\n    username,\n    getGithubRepos,\n    repos\n  } = _ref;\n  useEffect(() => {\n    getGithubRepos(username);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ProfileGithub\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","getGithubRepos","Spinner","jsxDEV","_jsxDEV","ProfileGithub","_ref","_s","username","repos","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","array","string","mapStateToProps","state","profile","$RefreshReg$"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/components/profile/ProfileGithub.js"],"sourcesContent":["import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport { getGithubRepos } from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    },[])\r\n        \r\n  return (\r\n    <div>ProfileGithub</div>\r\n  )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos:state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub);"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAAQC,OAAO,QAAO,aAAa;AACnC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGC,IAAA,IAAuC;EAAAC,EAAA;EAAA,IAAtC;IAACC,QAAQ;IAAEP,cAAc;IAAEQ;EAAK,CAAC,GAAAH,IAAA;EACpDR,SAAS,CAAC,MAAM;IACZG,cAAc,CAACO,QAAQ,CAAC;EAC5B,CAAC,EAAC,EAAE,CAAC;EAEP,oBACEJ,OAAA;IAAAM,QAAA,EAAK;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAE5B,CAAC;AAAAP,EAAA,CARKF,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAUnBA,aAAa,CAACW,SAAS,GAAG;EACtBf,cAAc,EAAEF,SAAS,CAACkB,IAAI,CAACC,UAAU;EACzCT,KAAK,EAAEV,SAAS,CAACoB,KAAK,CAACD,UAAU;EACjCV,QAAQ,EAAET,SAAS,CAACqB,MAAM,CAACF;AAC/B,CAAC;AAED,MAAMG,eAAe,GAAGC,KAAK,KAAK;EAC9Bb,KAAK,EAACa,KAAK,CAACC,OAAO,CAACd;AACxB,CAAC,CAAC;AAEF,eAAeT,OAAO,CAACqB,eAAe,EAAE;EAACpB;AAAc,CAAC,CAAC,CAACI,aAAa,CAAC;AAAC,IAAAU,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}