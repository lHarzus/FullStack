{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from './types';\n\n//Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Delete post\nexport const deletepPost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'sucess'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Add post\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post created', 'sucess'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Get post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Post created', 'sucess'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletepPost","delete","addPost","formData","config","headers","post","getPost","addComment","postId"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/actions/post.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from './types';\r\n\r\n//Get posts\r\nexport const getPosts = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/posts')\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        });\r\n    }catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n//Add like\r\nexport const addLike = (id) => async dispatch => {\r\n    try{\r\n        const res = await axios.put(`/api/posts/like/${id}`)\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {id, likes: res.data}\r\n        });\r\n    }catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n//Remove like\r\nexport const removeLike = (id) => async dispatch => {\r\n    try{\r\n        const res = await axios.put(`/api/posts/unlike/${id}`)\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {id, likes: res.data}\r\n        });\r\n    }catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//Delete post\r\nexport const deletepPost = (id) => async dispatch => {\r\n    try{\r\n        const res = await axios.delete(`/api/posts/${id}`)\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        });\r\n        dispatch(setAlert('Post Removed','sucess'));\r\n    }catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//Add post\r\nexport const addPost = (formData) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post('/api/posts',formData,config);\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Post created','sucess'));\r\n    }catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//Get post\r\nexport const getPost = (id) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/posts/${id}`)\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        });\r\n    }catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }\r\n\r\n}\r\n\r\n//Add comment\r\nexport const addComment = (postId,formData) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/posts/comment/${postId}`,formData,config);\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert('Post created','sucess'));\r\n    }catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg : err.response.statusText, status:err.response.status}\r\n        });\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}