{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rubni\\\\OneDrive\\\\Ambiente de Trabalho\\\\FullStack\\\\client\\\\src\\\\components\\\\profile\\\\ProfileAbout.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileAbout = _ref => {\n  let {\n    profile: {\n      bio,\n      skills,\n      user: {\n        name\n      }\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-about bg-light p-2\",\n    children: [bio && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-primary\",\n        children: [name.trim().split(' ')[0], \"s Bio\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary\",\n      children: \"Skill Set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills\",\n      children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 50\n        }, this), \" HTML\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ProfileAbout;\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\nexport default ProfileAbout;\nvar _c;\n$RefreshReg$(_c, \"ProfileAbout\");","map":{"version":3,"names":["React","Fragment","PropTypes","jsxDEV","_jsxDEV","ProfileAbout","_ref","profile","bio","skills","user","name","className","children","trim","split","fileName","_jsxFileName","lineNumber","columnNumber","map","skill","index","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/components/profile/ProfileAbout.js"],"sourcesContent":["import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileAbout = ({profile: {bio, skills, user: {name}}}) => {\r\n  return (\r\n    <div className=\"profile-about bg-light p-2\">\r\n        {bio && (\r\n            <Fragment>\r\n                <h2 className=\"text-primary\">{name.trim().split(' ')[0]}s Bio</h2>\r\n                <p>{bio}</p>\r\n                <div className=\"line\"></div>\r\n            </Fragment>\r\n        )}\r\n          <h2 className=\"text-primary\">Skill Set</h2>\r\n          <div className=\"skills\">\r\n            {skills.map((skill,index) => (\r\n                <div key={index} className=\"p-1\"><i className=\"fa fa-check\"></i> HTML</div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileAbout"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGC,IAAA,IAA4C;EAAA,IAA3C;IAACC,OAAO,EAAE;MAACC,GAAG;MAAEC,MAAM;MAAEC,IAAI,EAAE;QAACC;MAAI;IAAC;EAAC,CAAC,GAAAL,IAAA;EAC1D,oBACEF,OAAA;IAAKQ,SAAS,EAAC,4BAA4B;IAAAC,QAAA,GACtCL,GAAG,iBACAJ,OAAA,CAACH,QAAQ;MAAAY,QAAA,gBACLT,OAAA;QAAIQ,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAEF,IAAI,CAACG,IAAI,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,OAAK;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClEf,OAAA;QAAAS,QAAA,EAAIL;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACZf,OAAA;QAAKQ,SAAS,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEnC,eACCf,OAAA;MAAIQ,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3Cf,OAAA;MAAKQ,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBJ,MAAM,CAACW,GAAG,CAAC,CAACC,KAAK,EAACC,KAAK,kBACpBlB,OAAA;QAAiBQ,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAACT,OAAA;UAAGQ,SAAS,EAAC;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,SAAK;MAAA,GAA3DG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEd,CAAC;AAAAI,EAAA,GAlBKlB,YAAY;AAoBlBA,YAAY,CAACmB,SAAS,GAAG;EACrBjB,OAAO,EAAEL,SAAS,CAACuB,MAAM,CAACC;AAC9B,CAAC;AAED,eAAerB,YAAY;AAAA,IAAAkB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}