{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from '../actions/types';\nimport setAuthToken from '../utils/setAuthToken';\n\n//Load user\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//Register user\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n    try {\n      const res = await axios.post('/api/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","_ref","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport{\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR\r\n} from '../actions/types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Load user\r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//Register user\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name, email, password});\r\n\r\n    try{\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg,'danger')));\r\n        }\r\n        dispatch ({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,SAAS;AAChC,SACIC,gBAAgB,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,QACP,kBAAkB;AACzB,OAAOC,YAAY,MAAM,uBAAuB;;AAEhD;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EAC5C,IAAGC,YAAY,CAACC,KAAK,EAAC;IAClBJ,YAAY,CAACG,YAAY,CAACC,KAAK,CAAC;EACpC;EAEA,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,WAAW,CAAC;IAExCJ,QAAQ,CAAC;MACLK,IAAI,EAAET,WAAW;MACjBU,OAAO,EAAEH,GAAG,CAACI;IACjB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVR,QAAQ,CAAC;MACLK,IAAI,EAAER;IACV,CAAC,CAAC;EACN;AACJ,CAAC;;AAGD;AACA,OAAO,MAAMY,QAAQ,GAAGC,IAAA;EAAA,IAAC;IAACC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAAA,OAAK,MAAMV,QAAQ,IAAI;IACnE,MAAMc,MAAM,GAAG;MACXC,OAAO,EAAC;QACJ,cAAc,EAAG;MACrB;IACJ,CAAC;IAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAACP,IAAI;MAAEC,KAAK;MAAEC;IAAQ,CAAC,CAAC;IAEpD,IAAG;MACC,MAAMV,GAAG,GAAG,MAAMX,KAAK,CAAC2B,IAAI,CAAC,YAAY,EAAEH,IAAI,EAAEF,MAAM,CAAC;MAExDd,QAAQ,CAAC;QACLK,IAAI,EAAEX,gBAAgB;QACtBY,OAAO,EAAEH,GAAG,CAACI;MACjB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV,MAAMY,MAAM,GAAGZ,GAAG,CAACa,QAAQ,CAACd,IAAI,CAACa,MAAM;MAEvC,IAAGA,MAAM,EAAC;QACNA,MAAM,CAACE,OAAO,CAACC,KAAK,IAAIvB,QAAQ,CAACP,QAAQ,CAAC8B,KAAK,CAACC,GAAG,EAAC,QAAQ,CAAC,CAAC,CAAC;MACnE;MACAxB,QAAQ,CAAE;QACNK,IAAI,EAAEV;MACV,CAAC,CAAC;IACN;EACJ,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}