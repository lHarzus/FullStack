{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      console.log(payload.likes);\n      state.posts.map(post => console.log(post.likes));\n      return {\n        ...state,\n        posts: state.posts.map(post => {\n          return {\n            ...post,\n            likes: payload.likes\n          };\n        }),\n        loading: false\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","initialState","posts","post","loading","error","state","arguments","length","undefined","action","type","payload","console","log","likes","map"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/reducers/post.js"],"sourcesContent":["import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES\r\n}from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case GET_POSTS: \r\n            return{\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case POST_ERROR: \r\n            return{\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            console.log(payload.likes);\r\n            state.posts.map(post => console.log(post.likes));\r\n            return{\r\n                ...state,\r\n                posts: state.posts.map(post =>  {return{...post, likes: payload.likes}} ),\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,SACIA,SAAS,EACTC,UAAU,EACVC,YAAY,QACV,kBAAkB;AAExB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,CAAC;AACZ,CAAC;AAED,eAAe,YAAsC;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,MAAM;IAACE,IAAI;IAAEC;EAAO,CAAC,GAAGF,MAAM;EAE9B,QAAOC,IAAI;IACP,KAAKb,SAAS;MACV,OAAM;QACF,GAAGQ,KAAK;QACRJ,KAAK,EAAEU,OAAO;QACdR,OAAO,EAAE;MACb,CAAC;IACL,KAAKL,UAAU;MACX,OAAM;QACF,GAAGO,KAAK;QACRD,KAAK,EAAEO,OAAO;QACdR,OAAO,EAAE;MACb,CAAC;IACL,KAAKJ,YAAY;MACba,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,KAAK,CAAC;MAC1BT,KAAK,CAACJ,KAAK,CAACc,GAAG,CAACb,IAAI,IAAIU,OAAO,CAACC,GAAG,CAACX,IAAI,CAACY,KAAK,CAAC,CAAC;MAChD,OAAM;QACF,GAAGT,KAAK;QACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACc,GAAG,CAACb,IAAI,IAAK;UAAC,OAAM;YAAC,GAAGA,IAAI;YAAEY,KAAK,EAAEH,OAAO,CAACG;UAAK,CAAC;QAAA,CAAC,CAAE;QACzEX,OAAO,EAAE;MACb,CAAC;IACL;MACI,OAAOE,KAAK;EAAC;AAEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}