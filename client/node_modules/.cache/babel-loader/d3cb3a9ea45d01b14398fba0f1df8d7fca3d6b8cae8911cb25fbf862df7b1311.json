{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS } from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\nexport default function AUTH() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR: //both erros do the same thing\n    case LOGIN_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n_c = AUTH;\nvar _c;\n$RefreshReg$(_c, \"AUTH\");","map":{"version":3,"names":["REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","initialState","token","localStorage","getItem","isAuthenticated","loading","user","AUTH","state","arguments","length","undefined","action","type","payload","setItem","removeItem","_c","$RefreshReg$"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/reducers/auth.js"],"sourcesContent":["import{\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function AUTH(state=initialState, action) {\r\n    const {type, payload } = action;\r\n    switch(type){\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR: //both erros do the same thing\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,SACIA,gBAAgB,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,aAAa,QACV,kBAAkB;AAEzB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,IAAI;EACbC,IAAI,EAAE;AACV,CAAC;AAED,eAAe,SAASC,IAAIA,CAAA,EAA6B;EAAA,IAA5BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACT,YAAY;EAAA,IAAEY,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnD,MAAM;IAACE,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAC/B,QAAOC,IAAI;IACP,KAAKjB,WAAW;MACZ,OAAM;QACF,GAAGY,KAAK;QACRJ,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE,KAAK;QACdC,IAAI,EAAEQ;MACV,CAAC;IACL,KAAKpB,gBAAgB;IACrB,KAAKK,aAAa;MACdG,YAAY,CAACa,OAAO,CAAC,OAAO,EAACD,OAAO,CAACb,KAAK,CAAC;MAC3C,OAAO;QACH,GAAGO,KAAK;QACR,GAAGM,OAAO;QACVV,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE;MACb,CAAC;IACL,KAAKV,aAAa;IAClB,KAAKE,UAAU,CAAC,CAAC;IACjB,KAAKC,UAAU;MACXI,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;MAChC,OAAO;QACH,GAAGR,KAAK;QACRP,KAAK,EAAE,IAAI;QACXG,eAAe,EAAE,KAAK;QACtBC,OAAO,EAAE;MACb,CAAC;IACL;MACI,OAAOG,KAAK;EAAC;AAEzB;AAACS,EAAA,GAhCuBV,IAAI;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}