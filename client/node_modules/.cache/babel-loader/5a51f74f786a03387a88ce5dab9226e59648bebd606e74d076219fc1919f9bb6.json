{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rubni\\\\OneDrive\\\\Ambiente de Trabalho\\\\FullStack\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGithub = _ref => {\n  _s();\n  let {\n    username,\n    getGithubRepos,\n    repos\n  } = _ref;\n  useEffect(() => {\n    getGithubRepos(username);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-girhub\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \"Github repois\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 27\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","getGithubRepos","Spinner","jsxDEV","_jsxDEV","ProfileGithub","_ref","_s","username","repos","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","href","html_url","target","rel","name","description","stargazers_count","_id","_c","propTypes","func","isRequired","array","string","mapStateToProps","state","profile","$RefreshReg$"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/components/profile/ProfileGithub.js"],"sourcesContent":["import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport { getGithubRepos } from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    },[])\r\n        \r\n  return (\r\n    <div className='profile-girhub'>\r\n        <h2 className='text-primary my-1'>Github repois</h2>\r\n        {repos === null ? <Spinner /> : (\r\n            repos.map(repo => (\r\n                <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n                    <div>\r\n                        <h4>\r\n                            <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>{repo.name}</a>\r\n                        </h4>\r\n                        <p>{repo.description}</p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li className='badge badge-primary'>\r\n                                Stars: {repo.stargazers_count}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            ))\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos:state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}