{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === payload.id ? {\n          ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","initialState","posts","post","loading","error","state","arguments","length","undefined","action","type","payload","map","_id","id","likes"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/reducers/post.js"],"sourcesContent":["import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST\r\n}from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case GET_POSTS: \r\n            return{\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case POST_ERROR: \r\n            return{\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return{\r\n                ...state,\r\n                posts: state.posts.map(post => post._id === payload.id ? {...post, likes: payload.likes} : post),\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,SACIA,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,WAAW,QACT,kBAAkB;AAExB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,CAAC;AACZ,CAAC;AAED,eAAe,YAAsC;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,MAAM;IAACE,IAAI;IAAEC;EAAO,CAAC,GAAGF,MAAM;EAE9B,QAAOC,IAAI;IACP,KAAKd,SAAS;MACV,OAAM;QACF,GAAGS,KAAK;QACRJ,KAAK,EAAEU,OAAO;QACdR,OAAO,EAAE;MACb,CAAC;IACL,KAAKN,UAAU;MACX,OAAM;QACF,GAAGQ,KAAK;QACRD,KAAK,EAAEO,OAAO;QACdR,OAAO,EAAE;MACb,CAAC;IACL,KAAKL,YAAY;MACb,OAAM;QACF,GAAGO,KAAK;QACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACW,GAAG,CAACV,IAAI,IAAIA,IAAI,CAACW,GAAG,KAAKF,OAAO,CAACG,EAAE,GAAG;UAAC,GAAGZ,IAAI;UAAEa,KAAK,EAAEJ,OAAO,CAACI;QAAK,CAAC,GAAGb,IAAI,CAAC;QAChGC,OAAO,EAAE;MACb,CAAC;IACL;MACI,OAAOE,KAAK;EAAC;AAEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}