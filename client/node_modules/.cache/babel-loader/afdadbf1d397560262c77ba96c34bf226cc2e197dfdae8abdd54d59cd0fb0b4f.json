{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rubni\\\\OneDrive\\\\Ambiente de Trabalho\\\\FullStack\\\\client\\\\src\\\\components\\\\posts\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../actions/post';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = _ref => {\n  _s();\n  let {\n    getPosts,\n    post: {\n      posts,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 15\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 29\n  }, this);\n};\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Posts;\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  post: state.post\n});\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","getPosts","Spinner","jsxDEV","_jsxDEV","Posts","_ref","_s","post","posts","loading","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/components/posts/Posts.js"],"sourcesContent":["import React, {Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getPosts } from '../../actions/post'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst Posts = ({getPosts, post : {posts, loading}}) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n    },[]);\r\n\r\n  return (\r\n    loading ? <Spinner/> : (<Fragment>\r\n        test\r\n    </Fragment>)\r\n  )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps,{getPosts})(Posts);"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,OAAO,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGC,IAAA,IAAyC;EAAAC,EAAA;EAAA,IAAxC;IAACN,QAAQ;IAAEO,IAAI,EAAG;MAACC,KAAK;MAAEC;IAAO;EAAC,CAAC,GAAAJ,IAAA;EAC9CR,SAAS,CAAC,MAAM;IACZG,QAAQ,EAAE;EACd,CAAC,EAAC,EAAE,CAAC;EAEP,OACES,OAAO,gBAAGN,OAAA,CAACF,OAAO;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE,gBAAIV,OAAA,CAACP,QAAQ;IAAAkB,QAAA,EAAC;EAElC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAY;AAEhB,CAAC;AAAAP,EAAA,CAVKF,KAAK;AAAAW,EAAA,GAALX,KAAK;AAYXA,KAAK,CAACY,SAAS,GAAG;EACdhB,QAAQ,EAAEF,SAAS,CAACmB,IAAI,CAACC,UAAU;EACnCX,IAAI,EAAET,SAAS,CAACqB,MAAM,CAACD;AAC3B,CAAC;AAED,MAAME,eAAe,GAAGC,KAAK,KAAK;EAC9Bd,IAAI,EAAEc,KAAK,CAACd;AAChB,CAAC,CAAC;AAEF,eAAeR,OAAO,CAACqB,eAAe,EAAC;EAACpB;AAAQ,CAAC,CAAC,CAACI,KAAK,CAAC;AAAC,IAAAW,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}