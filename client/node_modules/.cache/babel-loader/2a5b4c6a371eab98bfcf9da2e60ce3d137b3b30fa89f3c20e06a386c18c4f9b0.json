{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\n\n//Register user\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n    try {\n      const res = await axios.post('/api/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        error.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","register","_ref","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","error","forEach","msg"],"sources":["C:/Users/rubni/OneDrive/Ambiente de Trabalho/FullStack/client/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport{\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from '../actions/types';\r\n\r\n//Register user\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name, email, password});\r\n\r\n    try{\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors){\r\n            error.forEach(error => dispatch(setAlert(error.msg,'danger')));\r\n        }\r\n        dispatch ({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,SAAS;AAChC,SACIC,gBAAgB,EAChBC,aAAa,QACV,kBAAkB;;AAEzB;AACA,OAAO,MAAMC,QAAQ,GAAGC,IAAA;EAAA,IAAC;IAACC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAAA,OAAK,MAAMI,QAAQ,IAAI;IACnE,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAC;QACJ,cAAc,EAAG;MACrB;IACJ,CAAC;IAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAACR,IAAI;MAAEC,KAAK;MAAEC;IAAQ,CAAC,CAAC;IAEpD,IAAG;MACC,MAAMO,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,YAAY,EAAEJ,IAAI,EAAEF,MAAM,CAAC;MAExDD,QAAQ,CAAC;QACLQ,IAAI,EAAEf,gBAAgB;QACtBgB,OAAO,EAAEH,GAAG,CAACI;MACjB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV,MAAMC,MAAM,GAAGD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAACE,MAAM;MAEvC,IAAGA,MAAM,EAAC;QACNE,KAAK,CAACC,OAAO,CAACD,KAAK,IAAId,QAAQ,CAACR,QAAQ,CAACsB,KAAK,CAACE,GAAG,EAAC,QAAQ,CAAC,CAAC,CAAC;MAClE;MACAhB,QAAQ,CAAE;QACNQ,IAAI,EAAEd;MACV,CAAC,CAAC;IACN;EACJ,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}